01. 학습 가이드

- 자바 스크립트와 입/출력 플랫폼
- HTML 요소들을 객체화 하는 로드 과정이 포함됨
- HTML파일 > Document Objects (객체트리 in Memory) > 사용자 인터페이스
- 자바스크립트 > Document Object > WindowObject

window 
window.location
window.history
window.Document

02. 자바스크립트의 탄생과 플랫폼

- 전송하는 데이터에 대한 유효성 검사의 필요성

ex. 로그인 > 폼 객체의 유효성 검사 > 제어할 수 있는 언어가 javaScript

클라이언트단에 입력값을 확인 할 수 있고 서버에서는 불필요한 처리를 할 필요가 없다.

03. 실습환경 준비하기 

- 편집 도구 다운로드 및 설치 : Visual Studio Code
- 브라우서 : 사파리. 크롬, 파이어폭스, 익스플로어 

04. 코드 작성과 Live Server 설치하기

- 스크립트 코드 작성 영역 > 어디에 넣어도 상관 없음 .
<html>
    <head>
    </head>
    <body>

        content

    </body>
</html>

05. 데이터 객체와 래퍼 클래스

- 일반적인 언어의 값의 종류와 변수: 정수. 실수. 문자, 문자열
- javaScript에서는 기본형식이 없고 Wrapper형 클래스만 있다.
   정수/ 실수: Number, 문자/ 문자열: String, 불리안: Boolean
   ex) var x = new Number(3); === var x = 3; // var z; z == undefined

06. 배열(Array) 생성과 사용하기

 [배열 객체]

  - push / pop 메소드를 이용한 데이터 관리 : Stack
    *pop을 통해 호출된 값은 사라진다 

    var nums = new Array();

    nums.push(5);   var n1 = nums.pop();
    alert(nums);    alert(nums);
    
    nums.push(10);  var n2 = nums.pop();
    alert(nums);    alert(nums);

    nums.push(21);  var n3 = nums.pop();
    alert(nums);    alert(nums);

  - 인덱스를 이용한 데이터 관리 : List

    var nums = new Array();

    nums[0] = 5;    alert(nums[0]);
    alert(nums);

    nums[1] = 10;   alert(nums[1]);
    alert(nums);

    nums[2] = 21;
    alert(nums);

 ex) var nums = new Array();

    nums[3] = 5;
    alert(nums);

    alert(nums.length); // 4 *0, 1, 2 비어있는 공간이 만들어진다

07. 배열 초기화와 조작하기

 [배열 객체 초기화]

 var nums = new Array();

 - 5개의 공간을 미리 준비함
 var nums = new Array(5);

 - 2개 이상의 값을 입력할 경우 > 초기값으로 인식 
 var nums = new Array(5, 10, 21); 

 - javascript는 배열 어떤 데이터도 받을 수 있음 
  (주의: 모든 것을 담을 수 있지만 그래서 오류를 범할 수도 있음)
 var nums - new Array(5, 10, 21, "Hello") 
 * alert(typeof nums[3]); 

 var nums = new Array(5, 10, 21, "hello", new Array(2, 3, 4));
 * 3을 꺼내고 싶으면 > alert(nums[4][1]);

 [배열 객체 조작]

 - splice() 메소드를 이용한 데이터 관리 : List
 * 삭제, 대체, 삽입

 var nums = new Array(5, 10, 21, "hello");
 nums.splice(1); // 1번째 위치부터 다 지워진다
 nums.splice(1,1); // 1번째 위치에서 하나만 지워진다.
 nums.splice(1,1,"hoho"); // 1번째 위치에서 하나만 지우고 그자리 "hoho"로 대체 > 대체
 nums.splice(1,0,"hoho"); // 1번째 위치에 "hoho"삽입 > 삽입

 08. Object 객체

 객체지향 프로그래밍 언어?
 - javascript : prototype, class 
 - 동적인 객체 정의> 자바스크립트는 맨땅에 객체를 만들고, 필요한 속성이 있으면 그안에 붙인다.

 [Object 객체의 Expand Object] : 확장이 가능한 object

 - 키를 기반으로 데이터를 저장해야 할때
 
 var exam = new Object();
 exam.kor = 30;
 exam.eng = 70;
 exam.math = 80;

 alert(exam.kor + exam.eng);

 - 키를 이용한 데이터 관리: Map

 var exam = new Object();

 exam["kor"] = 30;
 exam["eng"] = 70;
 exam["math"] = 80;

 alert(exam["kor"]);

 *변수에 담겨진 문자열을 이용해서 객체의 속성을 꺼내야할때 / 값을 대입해야 할때 사용. => ??

 09. JSON

 [ Javascirpt 데이터 객체와 JSON 생성 방법 ]

          JavaScript Object                 JavaScirpt Object Notation(JSON)

Boolean   var n = new Boolean(true);        var n = true;
Number    var n = new Number(3);            var n = 3;
String    var s = new String("hello");      var s = "hello";   var s = 'hello';
Array     var ar = new Array();             var ar = [];
Object    var ob = new Object();            var ob = {};

 [ JSON의 중첩 표현 ] 
 
 var notice = [
                {"id":1, "title":"hello json"},
                {"id":2, "title":"hi json"},
                {"id":3, "title":"json is"},
              ];

notice[1] //{{"id":2, "title":"hi json"}}

10. eval 함수와 JSON 파싱하기

*외부에서 넘겨받은 파일일경우 
'{ "id":1, "title":"hello" }' => 문자열로 넘겨진다 

객체화 할 수 있는 방법은? 
1. eval()
2. JSON.paser();

11. JSON 파서를 이용한 파싱

*JSON parser() <> JSON.stringfy();

12. 자바스크립트 연산자

===, !== 연산자

var x = 3;
var y = 3;

== 값을 비교하는 연산
document.write( x == y); // ture 

=== 주소를 비교하는 연산 
document.write( x === y); // true 
?! 똑같은 값을 가진 박스를 안만들고 주소만 참조해 준다.
다른박스 만들고 싶으면 var y = new Number(3);

3 + "4" // 34
3.5 + "4" // 3.54
3.5 - "2" // 1.5 ?? 
=> 덧셈을 할때는 다 문자열, 뺄셈을 할때는 문자열이 숫자가 된다.

console.log(5 < 3 + 4); // true
console.log("32" > "4"); // false
console.log(32 > "4"); // true

13. 자바스크립트 제어구조

- 조건문: if, while, do-while
- 반복문: while, for, for-in
- 선택문: else, else if, switch

* for-in문
i<ar.length; i++; 조건이랑 증감하는 부분이 생략됨.

14. 함수 객체와 표현식

함수?? 대입?? 객체??

int add(int x, int y){   
  return x+y; 
}

=> 자바스크립트의 함수
var add = new Function("x, y", "return x+y;");   
alert(add(3, 4));

=> 자바스크립트의 함수 표현식1 (제일 많이사용)
var add = function(x,y){
  return x+y;
}; // ; 사용

=> 자바스크립트의 함수 표현식2
function add(x, y){
  return x+y;
} // ; 사용안함



